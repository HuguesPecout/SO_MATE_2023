---
title: "Visualisation de données avec R"
subtitle: "Tour d'horizon des fonctionnalités de représentation graphique"
img: images/entete.png
# date: 
author: Hugues Pecout (CNRS, UMR Géographie-Cités)
institute: "Journée annuelle SO-MATE 2023, Limoges"
affiliation: <img src="images/cnrs.png" width="60" style="margin-right:320px;"/><img src="images/somate.png" width="260" style="margin-right:320px;"/><img src="images/geocite.jpeg" width="60" />
lang: fr
editor: source
format:
  revealjs: 
    template-partials:
      - title-slide.html
    theme: [dark, styles.scss]
    logo: images/logo_mate_shs_0.png
    footer: "Journée annuelle SO-MATE 2023 - Représentations graphiques avec R"
    scrollable: TRUE
    smaller: TRUE
    overview: TRUE
    chalkboard: FALSE
    transition: fade
    transition-speed: fast
    menu: TRUE
    css: style.css
    pointer:
      pointerSize: 20
      color: 'red4'
revealjs-plugins:
  - pointer
---

# [Outils de représentation de données]{.bigtwo}

## [Graphiques avec Excel]{.bigone}

::: columns
::: {.column width="25%"}

::: {style="font-size:145%;"} 
✅ **Rapide**   
✅ **Facile**    

\

::: {.txt2}

**Fonctionnalités disponibles :**

❌ Graphiques par défault    
❌ Types de graphiques    
❌ Interactivité        

\

**Gestion des données :**

❌ Manipulation des données         
❌ Statistiques             
❌ Données volumineuses      

\

**Reproductibilité :**

❌ Automatisation du pipeline   
❌ Collaboration         
❌ Versioning
:::
:::
:::

::: {.column width="75%"}
::: {style="margin-top:30px;margin-bottom:15px;font-size:160%;"}
**Mais la représentation graphiques avec Excel connaît des limites...**
:::

![](images/excel.png)

::: {.center style="font-size:80%;"}
[https://excelcharts.com/](https://excelcharts.com/)
:::
:::
:::

## [Graphiques avec des outils dédiés]{.bigone}

[Des **fonctionnalités avancées** et des **sorties graphiques très élégantes**, mais des **logiciels payants**.]{style="font-size:130%;margin-top:10px"}

::: {style="margin-top:-10px;"}
[Bon outils si on ne pratique pas R régulièrement, mais **limité notamment en matière de reproductibilité**.]{style="font-size:130%;"}
:::

::: columns
::: {.column width="20%"}
![](images/power-bi_logo.png){width=80% style="margin-top:10px;"} 
![](images/Tableau-Logo.png){width=80% style="margin-top:-15px;"}    
![](images/ClickView-logo-1.png){width=80% style="margin-top:-15px;"} 
![](images/flourish.jpg){width=80% style="margin-top:20px;"}    
![](images/datawrapper.png){width=80% style="margin-top:20px;"}
![](images/Adobe_Illustrator.png){width=45% style="margin-top:20px;"}  
:::

::: {.column width="5%"}

:::

::: {.column width="75%"}

![](images/power-bi.png){width=90%}

:::

:::


# [Graphiques avec R]{.bigtwo}

## [Fonctions graphiques R-base]{.bigone}

[La version 1.0 de R a été publiée en 2000, mais ce langage est distribué en tant que logiciel Open Source et avec des fonctions graphiques depuis 1995. **Au centre de l'ecosystème graphique du R-base : la fonction** [**`plot()`**](https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/plot)]{.bigbis}

::: {.codeXXL style="margin-top:30px;"}
```{r}
#| echo: true
#| out.width: 85%
plot(x = 1, y = 1)
```
:::

## [plot()]{.bigone}

[**Une fonction générique très pratique pour l'exploration, qui s'adapte aux différents types des données.**]{.bigtwo}

::: columns
::: {.column width="50%"}

[1 variable quantitative]{.orange .codeL} - [Nuage de points ordonnés]{.codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
plot(cars$speed)
```
:::

[2 variables quantitatives]{.orange .codeL} - [Nuage de points]{.codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
plot(speed ~ dist, data = cars)
```
:::


[1 variable quanti vs 1 variable quali]{.orange .codeL}  - [Boîte à moustache]{.codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
plot(ncases ~ agegp, data = esoph)
```
:::

:::


::: {.column width="50%"} 

[1 variable qualitative]{.orange .codeL} - [Diagramme en barre]{.codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
plot(esoph$agegp)

```
::: 

[2 variables qualitatives]{.orange .codeL} - [Graphique en mosaic]{.codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%

plot(alcgp ~ agegp, data = esoph)
```

:::

[1 variable quali vs 1 variable quanti]{.orange .codeL} - [Spine plot]{.codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
plot(agegp ~ ncases, data = esoph)
```
:::
:::
:::

[Un tableau de données complet]{.orange .codeL} - [Un seul type de graphique]{.codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
plot(iris)
```
:::


## [Autres fonctions graphiques R-base]{.bigone}

::: {.bigbis}
-   `hist()` : histogramme de distribution 
-   `stripchart()` : diagrammes de dispersion
-   `dotchart()` : diagramme en points de Cleveland
-   `boxplot()` : diagramme en boîte
-   `qqnorm()` : diagramme quantile-quantile théorique normal
-   `qqplot()` : diagramme quantile-quantile empirique
-   `barplot()` : diagramme à barres
-   `pie()` : diagramme en secteurs
-   `mosaicplot()` : diagramme en mosaïque
-   `spineplot()` : diagrammes en épine (entre l'histogramme et le mosaic plot)
-   `curve()` : Représentation d'une expression mathématique
-   `matplot()` : Dispersions de toutes le variables d'un tableau (un graphique)
-   `pairs()` : Matrice de nuage de point pour l'ensemble des variables d'un tableau
-   etc....
:::

::: {.bigone}
:::{.callout-note }
En fonction du type de variable, la fonction `plot()` renvoie vers les fonctions `barplot()`,  `spineplot()`, `stripchart()`, `boxplot()`, `curve()`, `pairs()`...
:::
:::

::: columns

::: {.column width="33%"}

[Histogramme de distribution]{.orange .codeL} 

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
hist(cars$speed)
```
:::

[Diagrammes de dispersion]{.orange .codeL} 

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
stripchart(cars$speed, method = "stack")
```
:::

[Diagrammes en épine]{.orange .codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
spineplot(agegp ~ ncases, data = esoph)
```
:::


:::

::: {.column width="33%"}

[Boîte à moustache]{.orange .codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
boxplot(cars$speed)
```
:::

[Diagramme en points de Cleveland]{.orange .codeL} 

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
dotchart(cars$speed)

```
:::


[Camembert]{.orange .codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
# Create data for the graph.
tab <- data.frame(
          name = c("A", "B", "C"),
          value = c(19,53, 88)
         )

# Plot the chart.
pie(tab$value, tab$name)
```
:::

:::

::: {.column width="33%"}

[Diagramme à barres]{.orange .codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
barplot(table(esoph$agegp))
```
:::



[Expression mathématique]{.orange .codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
curve(expr = x^3)
```
:::





[Nuage de points - toutes les variables]{.orange .codeL}

::: {.codeXL style="margin-top:10px;"}
```{r}
#| echo: true
#| out.width: 100%
pairs(iris)
```
:::


:::


:::

## [Les fonctions R-base de mise en page]{.bigone}


## [Fenêtre graphique]{.bigone}

## [2001 - Lattice]{.bigone}

New API Easy small multiples

## 2007 - ggplot2

Revolution...

## ggplot2 extensions

exts.ggplot2.tidyverse.org

## Customization et Art graphique

Cedric Scherer - X-Men Characters Tania Shapiro - Best selling Authors

# Palettes de couleur

# Visualisation thématique

## Analyse de réseau

networkD3

## Analyse de séquence

## Scatterplot3D

## rgl

## heatmap

superheat ComplexHeatmap

## Textuelle

wordcloud

## Slope graphs

CGPfunctions

## Circular plot

https://jokergoo.github.io/circlize_book/book/

## Survival

Survival plots

## Visualisation spatiale

## Intéractivité (javascript link)

htmlwidgets.org

## leaflet

## rbokeh

## rCharts

## highcharter

## Shiny

## Autre (plotly et cie)

Plotly \> ggplot2 \> Plotly.js \> D3.js \> Javascript

echarts4r

robservable

# Export

## Classique

## notebook

## shiny

# Ressource

## R graph galley

## R charts

## Rzine

## ggplot2 official

https://www.data-imaginist.com/screens/
